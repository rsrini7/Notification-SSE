-- Drop table if exists to avoid conflicts
DROP TABLE IF EXISTS authorities;
DROP TABLE IF EXISTS muted_notification_types; -- Drop before user_preferences due to FK
DROP TABLE IF EXISTS user_preferences;
DROP TABLE IF EXISTS notifications;
DROP TABLE IF EXISTS notification_types;
DROP TABLE IF EXISTS users;

-- Create users table first (referenced by authorities and user_preferences)
CREATE TABLE users (
    username VARCHAR(50) NOT NULL PRIMARY KEY,
    email VARCHAR(255),
    password VARCHAR(100) NOT NULL,
    enabled BOOLEAN NOT NULL
);

-- Create notification_types table (referenced by notifications)
CREATE TABLE notification_types (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    type_code VARCHAR(50) NOT NULL UNIQUE,
    description VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    active BOOLEAN DEFAULT true
);

-- Create notifications table (references notification_types)
CREATE TABLE notifications (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    event_id VARCHAR(36) NULL, -- New column for event ID
    notification_type_id BIGINT NOT NULL,
    source_service VARCHAR(255),
    title VARCHAR(255),
    priority VARCHAR(50),
    content VARCHAR(1000),
    created_at TIMESTAMP,
    read_status VARCHAR(50),
    email_dispatched_at TIMESTAMP NULL DEFAULT NULL, -- New column
    metadata VARCHAR(4000),
    tags VARCHAR(4000),
    CONSTRAINT fk_notification_type FOREIGN KEY (notification_type_id) REFERENCES notification_types(id),
    CONSTRAINT uc_event_user UNIQUE (event_id, user_id) -- New unique constraint
);

-- Create authorities table (references users)
CREATE TABLE authorities (
    username VARCHAR(50) NOT NULL,
    authority VARCHAR(50) NOT NULL,
    CONSTRAINT fk_authorities_users FOREIGN KEY(username) REFERENCES users(username)
);

-- Create user_preferences table (references users)
CREATE TABLE user_preferences (
    user_id VARCHAR(255) PRIMARY KEY,
    email_enabled BOOLEAN DEFAULT true,
    sse_enabled BOOLEAN DEFAULT true,
    minimum_email_priority VARCHAR(50) DEFAULT 'HIGH',
    CONSTRAINT fk_user_prefs_users FOREIGN KEY(user_id) REFERENCES users(username) -- Assuming user_id in user_preferences maps to username in users
);

-- Create table for muted notification types (ElementCollection)
CREATE TABLE muted_notification_types (
    user_preferences_user_id VARCHAR(255) NOT NULL,
    muted_notification_types VARCHAR(255) NOT NULL, -- Changed column name
    PRIMARY KEY (user_preferences_user_id, muted_notification_types), -- Changed column name in PK
    CONSTRAINT fk_muted_prefs_user FOREIGN KEY (user_preferences_user_id) REFERENCES user_preferences(user_id) ON DELETE CASCADE
);

-- Create indexes
CREATE UNIQUE INDEX ix_auth_username ON authorities (username, authority);
CREATE INDEX idx_user_id ON notifications(user_id);
CREATE INDEX idx_notification_type_id ON notifications(notification_type_id);
CREATE INDEX idx_priority ON notifications(priority);
CREATE INDEX idx_created_at ON notifications(created_at);
CREATE INDEX idx_notification_type_code ON notification_types(type_code);
CREATE INDEX idx_read_status ON notifications(read_status);
CREATE INDEX idx_event_id ON notifications(event_id); -- New index
